x
lapply(x, mean)
x <- 1:4
x
class(x)
lapply(x, runif)
?runif
x
lapply(x, runif, min=0, max=10)
x <- list(a = matrix(1:4, 2, 2), b = matrix(1:6, 3, 2))
x
lapply(x, function(elt) elt[, 1])
?elt
x <- list(a = 1:4, b = rnorm(10), c = rnorm(20, 1), d = rnorm(100, 5))
lapply(x, mean)
sapply(e, mean)
sapply(x, mean)
mean(x)
str(apply)
?apply
x <- matrix(rnorm(200), 20, 10)
x
apply(x, 2, mean)
apply(x, 2)
apply(x, 2, put)
apply(x, 2, puts)
apply(x, 2, print)
View(x)
apply(x, 2, print)
apply(x, 2, mean)
x[, 2]
x[, 1]
mean(x[, 1])
mean(x[, 2])
?rowSums
?na.rm
?rm
?na.rm
?rowSums
x <- matrix(rnorm(200), 20, 10)
apply(x, 1, quantile, probs = c(0.25, 0.75))
?quantile
a <- array(rnorm(2 * 2 * 10), c(2, 2, 10))
?rnorm
View(a)
?array
apply(a, c(1, 2), mean)
rowMeans(a, dims=2)
x <- c(rnorm(10), runif(10), rnorm(10, 1))
f <- gl(3, 10)
?gl
f
tapply(x, f, mean)
tapply(x, f, mean, simplify = FALSE)
tapply(x, f, range)
tapply(x, f, mean, simplify = TRUE)
?range
?split
x <- c(rnorm(10), runif(10), rnorm(10, 1))
?rnorm
f <- gl(3, 10)
f
split(x, f)
View(x)
lapply(split(x, f), mean)
library(datasets)
?library
?head
head(airquality)
s <- split(airquality, airquality$Month)
s
lapply(s, function(x) colMeans(x[, c("Ozone", "Solar.R", "Wind")]))
sapply(s, function(x) colMeans(x[, c("Ozone", "Solar.R", "Wind")]))
sapply(s, function(x) colMeans(x[, c("Ozone", "Solar.R", "Wind")], na.rm = TRUE))
x <- rnorm(10)
f1 <- gl(2, 5)
f2 <- gl(5, 2)
f1
f2
interaction(f1, f2)
?interaction
str(split(x, list(f1, f2)))
?str
str(split(x, list(f1, f2), DROP = true))
str(split(x, list(f1, f2), drop = TRUE))
?mapply
mapply(rep, 1:4, 4:!)
mapply(rep, 1:4, 4:1)
noise <- function(n, mean, sd) { rnorm(n, mean, sd) }
noise(5, 1, 2)
noise(1:5, 1:5, 2)
noise(1:5, 1:5, 2)
mapply(noise, 1:5, 1:5, 2)
log(-1)
printmessage <- function(x) {
if(x > 0)
print("x is greater than zero")
else
print("x is less than or equal to zero")
invisible(x)
}
?invisible
printmessage(0)
printmessage(1)
printmessage <- function(x) {
if (x > 0)
print("x is greater than zero") else print("x is less than or equal to zero")
invisible(x)
}
printmessage(1)
printmessage(0)
printmessage(NaN)
printmessage2 <- function(x) {
if(is.na(x))
print("x is a missing value!")
else if(x > 0)
print("x is greater than zero")
else
print("x is less than or equal to zero")
invisible(x)
}
printmessage2(2)
printmessage2(-1)
printmessage2(NaN)
printmessage2(NA)
x <- log(-1)
x
printmessage2(x)
printmessage2(x)
traceback
mean(x)
mean(x)
traceback()
lm(y ~ x)
traceback()
debug(lm)
lm(y ~ x)
exit()
q()
lm(y ~ x)
options(error = recover)
read.csv(nosuchfile)
2
0
0
library(datasets)
data(iris)
?iris
iris
mapply(iris, c("Sepal.Length"))
load(url("http://bit.ly/dasi_gss_data"))
View(gss)
levels(gss$conarmy)
plot(gss$conarmy ~ gss$year)
summary(gss$conary ~ gss$year)
table(gss$conary ~ gss$year)
summary(gss)
summary(table(gss))
summary(gss)
?summary
summary(gss$conarmy)
summary(gss$year)
summary(gss$conarmy)
subset(gss)
subset(gss, year, conarmy)
subset(gss, year + conarmy)
subset(gss, year | conarmy)
gss[, gss$conarmy]
gss[gss$conarmy,]
gss[, c("conarmy")]
gss[, c("year", "conarmy")]
test <- gss[, c("year", "conarmy")]
View(test)
complete.cases(test)
test[complete.cases(test)]
test[complete.cases(test),]
View(test[complete.cases(test),])
pnorm
pnorm(1.82, mean = 30.69, sd = 4.31)
pnorm(-1.82, mean = 30.69, sd = 4.31)
9.4 / sqrt(507)
((2.33 / 40) * 300) ** 2
30.69 + 1.65 * 4.31/6
30.69 - 1.65 * 4.31/6
install.packages("UsingR")
library(UsingR)
data(galton)
par(mfrow=c(1,2))
hist(galton$child, col="blue", breaks=100)
hist(galton$parent, col="blue", breaks=100)
library(manipulate)
myHist <- function(mu) {
hist(galton$child, col="blue", breaks=100)
lines(c(mu, mu), c(0, 150), col="red", lwd=5)
mse <- mean((galton$child - mu)^2)
text(63, 150, paste("mu = ", mu))
text(63, 140, paste("MSE = ", round(mse, 2)))
}
manipulate(myHist(mu), mu = slider(62, 74, step = 0.5))
par(mfrow=c(1,1))
mean(galton$child)
plot(galton$parent, galton$child, pch=19, col="blue")
lm(I(child-mean(child))~I(parent - mean(parent)) - 1, data = galton)
y <- galton$child
x <- galton$parent
beta1 <- cor(y, x) * sd(y) / sd(x)
beta0 <- mean(y) - beta1 * mean(x)
rbind(c(beta0, beta1), coef(lm(y ~ x)))
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
cor(x, w)
cor(w, x)
I
?I
w * ((x - 0.1471)**2)
sum(w * ((x - 0.1471)**2))
sum(w * ((x - 1.077)**2))
sum(w * ((x - 0.0025)**2))
sum(w * ((x - 0.3)**2))
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
plot(x ~ y)
lm(x ~ y)
lm(y ~ x)
data(mtcars)
lm(mtcars$mpg ~ mtcars$weight)
head(mtcars)
?lm
lm(mtcars$mpg ~ mtcars$wt)
cov(1, 0.5)
cov(0.5, 1)
norm
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
norm(x)
?norm
scale(x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y ~ x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
sum(x - 0.573)
sum(x - 0.8)
sum(x - 0.36)
sum(x - 0.44)
sum((x - 0.573)**2)
sum((x - 0.8)**2)
sum((x - 0.36)**2)
sum((x - 0.44)**2)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y ~ x)
lm(I(y) ~ x)
lm(I(y) ~ I(x))
sum((y - (x*-0.04462))**2)
sum((y - (x*-1.713))**2)
sum((y - (x*0.8263))**2)
sum((y - (x*0.59915))**2)
packages.install("swirl")
install.packages("swirl")
library(swirl)
rm(list=ls())
swirl()
plot(child ~ parent, galton)
plot(jitter(child, 4) ~ parent, galton)
regrline <- lm(child ~ parent, galton)
abline(regrline, lwd=3, col="red")
summary(regrline)
cor(gpa_nor, gch_nor)
play()
cor(gpa_nor, gch_nor)
cor(galton$parent, galton$child)
nxt()
l_nor <- lm(gch_nor ~ gpa_nor)
lm(child ~ parent, galton)
fit <- lm(child ~ parent, galton)
summary(fit)
mean(fit$residuals)
cov(fit$residuals, galton$parent)
fit$coef
ols.ic <- fit$coef[1]
ols.slope <- fit$coef[2]
lhs - rhs
all.equal(lhs, rhs)
play()
?all.equal
lhs
rhs
nxt()
varChild <- var(galton$child)
varRes <- var(fit$residuals)
varEst <- est(ols.slope + ols.ic)
varEst <- est(ols.slope, ols.ic)
varEst <- var(est(ols.slope, ols.ic))
all.equal(varChild, varRes ++ varEst)
all.equal(varChild, varRes + varEst)
efit <- lm(accel ~ mag+dist, attenu)
mean(efit$residuals)
round(mean(efit$residuals))
cov(efit$residuals, attenu$mag)
cov(efit$residuals, attenu$dist)
lm(child ~ parent, galton)
fit <- lm(child ~ parent, galton)
sqrt(sum((fit$residuals) ** 2)/(n - 2))
sqrt(sum((fit$residuals ** 2)/(n - 2))
)
sqrt(sum(fit$residuals ** 2)/(n - 2)))
sqrt(sum(fit$residuals ** 2)/(n - 2))
summary(fit)$sigma
sqrt(deviance(fit)/(n-2))
mu <- mean(galton$child)
sTot <- sum((galton$height - mu)^2)
sTot <- sum((galton$child - mu)^2)
sRes <- deviance(sTot)
sRes <- deviance(sTot)
sRes <- sTot
sRes <- deviance(fit)
1 - sRes/sTot
summary(fit)$r.squared
cor(galton$child, galton$parent)
cor(galton$child, galton$parent)^2
dataset(anscombe)
data(anscombe)
example(anscombe)
example(galton)
example(mtcars)
library(swirl)
swirl
swirl()
quit()
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
fit <- lm(y ~ x)
fit
fit$residuals
fit$coefficients
summary(fit)
fit$residuals
sd(fit$residuals)
est(fit$residuals)
?est
estimate
?estimate
?est
0.7224*8
data(mtcars)
fit <- lm(mpg ~ weight, mtcars)
fit <- lm(mpg ~ wt, mtcars)
summary(fit)
fit$coefficients
coef <- summary(fit)$coefficients
coef[1, 1]
coef[1, 1] + c(-1, 1) * qt(.975, df =  fit$df) * coef[1, 2]
coef[2, 1] + c(-1, 1) * qt(.975, df =  fit$df) * coef[2, 2]
?mtcars
coef[1, 1] + c(-1, 1) * qt(.975, df =  fit$df) * coef[1, 2]
coef[1, 1] + c(-1, 1) * qt(.975, df =  fit$df) * coef[1, 2]
?predict
predict(fit)
predict(fit, 3000)
coef[1, 1] + c(-1, 1) * qt(.975, df =  fit$df) * coef[1, 2]
plot(fit)
fit
summary(fit)
coef[1, 1] + c(-1, 1) * qt(.975, df =  fit$df) * coef[1, 2]
3000 * -5.3445
summary(fit)
coef[1,1] + coef[2,1] * 3000
coef[2,1] + coef[1,1] * 3000
coef[1,1] + coef[2,1] * 3000
coef[1,1] + coef[2,1] * 3000
1 + 1 / fit$df
1 + 1 / fit$df + ((3000 - mean(mtcars$wt)^2))
1 + 1 / fit$df + ((3000 - mean(mtcars$wt)^2)/(sum(mtcars$wt - mean(mtcars$wt))^2))
sqrt(1 + 1 / fit$df + ((3000 - mean(mtcars$wt)^2)/(sum(mtcars$wt - mean(mtcars$wt))^2)))
plot(fit)
plot(mtcars$mpg ~ mtcars$weight)
plot(mtcars$mpg, mtcars$weight)
abline(fit)
plot(mtcars$mpg, mtcars$wt)
abline(lm(mtcars$mpg ~ mtcars$wt))
plot(mtcars$wt, mtcars$mpg)
abline(lm(mtcars$mpg ~ mtcars$wt))
coef[2,1] + coef[1,1] * 3
coef[1,1] + coef[2,1] * 3
summary(fit)
summary(fit)$errors
summary(fit)$error
sum(fit$residuals^2)
sum((fit$residuals - mean(fit$residuals))^2)
fit$residuals
sum(fit$residuals)
sum(fit$residuals^2)
fit2 <- lm(I(mtcars$mpg) ~ mtcars$wt)
sum(fit2$residuals^2)
fit3 <- lm(I(mtcars$mpg) ~ I(mtcars$wt))
sum(fit3$residuals^2)
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
lm(y ~ x)
fit <- lm(y ~ x)
summary(fit)
coef[2,1] + coef[1,1] * 3
coef <- fit$coefficients
coef[2,1] + coef[1,1] * 3
coef
coef <- summart(fit)$coefficients
coef <- summary(fit)$coefficients
coef[2,1] + coef[1,1] * 3
coef[2,1] + coef[1,1]
coef[1, 1] + c(-1, 1) * qt(.975, df =  fit$df) * coef[1, 2]
pt
?pt
pt(0.975, fit$df)
pt(0.975, fit$df, mean(fit))
pt(0.975, fit$df, mean(fit$residuals))
pt(0.975, fit$df)
summary(fit)
pt(0.975, fit$df, mean(x))
mean(x)
-12.973/2
t.test
?t.test
t.test(x, y)
t.test(x, y, alternative = "two.sided")
t.test(x, y, alternative = "two.sided", mu = mean(x))
t.test(y ~ x)
t.test(x, y, alternative = "two.sided")
fit
summary(fit)
t.test(fit)
t.test(summary(fit)$cofficients[1,1])
0.1885/0.2061
fit$df
1-0.9735
1-0.9735 * 2
(1-0.9735) * 2
fit <- lm(mtcars$mpg ~ mtcars$wt)
summary(fit)
coef[1, 1] + c(-1, 1) * qt(.975, df =  fit$df) * coef[1, 2]
coef <- summary(fit)$coefficients
coef[1, 1] + c(-1, 1) * qt(.975, df =  fit$df) * coef[1, 2]
coef[2, 1] + c(-1, 1) * qt(.975, df =  fit$df) * coef[2, 2]
coef[2, 1] + c(-1, 1) * qt(.975, df =  fit$df) * coef[2, 2]
?qt
coef[2, 1] + c(-1, 1) * qt(.975, df =  fit$df, ncp = mean(mtcars$wt)) * coef[2, 2]
coef[2, 1] + c(-1, 1) * qt(.975, df =  fit$df) * coef[2, 2]
cor(mtcars$mpg, mtcars$wt)
mean(mtcars$wt)
mean(mtcars$wt) * cor(mtcars$mpg, mtcars$wt)
coef[2, 1] + c(-1, 1) * qt(.975, df =  fit$df) * coef[2, 2] + mean(mtcars$wt) * cor(mtcars$mpg, mtcars$wt)
mean(mtcars$wt) * cor(mtcars$mpg, mtcars$wt)
?cor
mean(mtcars$wt) * cor(mtcars$wt, mtcars$mpg)
summary(fit)
-5.3445 * mean(mtcars$wt)
-5.3445 * mean(mtcars$wt) + 37.2851
coef[2, 1] + c(-1, 1) * qt(.975, df =  fit$df) * coef[2, 2] + -5.3445 * mean(mtcars$wt) + 37.2851
coef[2, 1] + c(-1, 1) * qt(.975, df =  fit$df) * coef[2, 2] + (-5.3445 * mean(mtcars$wt) + 37.2851)
-5.3445 * mean(mtcars$wt) + 37.2851
data(mtcars)
head(mtcars)
lm(mpg ~ cyl + wt, data = mtcars)
summary(lm(mpg ~ cyl + wt, data = mtcars))
summary(lm(mpg ~ cyl * wt, data = mtcars))
summary(lm(mpg ~ cyl + wt, data = mtcars))
mtcars$cyl
type(mtcars$cyl)
class(mtcars$cyl)
mtcars$cyl <- as.factor(mtcars$cyl)
type(mtcars$cyl)
class(mtcars$cyl)
summary(lm(mpg ~ cyl + wt, data = mtcars))
summary(lm(mpg ~ cyl + wt - 1, data = mtcars))
summary(lm(mpg ~ cyl, data = mtcars))
summary(lm(mpg ~ cyl + wt, data = mtcars))
summary(lm(mpg ~ cyl * wt, data = mtcars))
?vif
?fit
?update
fit1 <- lm(mpg ~ cyl + wt, data = mtcars)
fit2 <- lm(mpg ~ cyl * wt, data = mtcars)
anova(fit1, fit2)
lm(mpg ~ I(wt * 0.5) + factor(cyl), data = mtcars)
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
fit <- lm(y ~ x)
dfbetas(fit)
hatvalues(fit)
dfbetas(fit)
library(swirl)
swirl()
help
help()
info()
main()
ones <- rep(1, nrow(galton))
lm(child ~ ones + parent - 1, galton)
lm(child ~ parent, galton)
lm(child ~ 1, galton)
View(trees)
fit <- lm(Volume ~ Girth + Height + Constant - 1, trees)
trees2 <- eliminate("Girth", trees)
View(trees2)
fit2 <- lm(Volume ~ Height + Constant - 1, trees2)
lapply(list(fit, fit2), coef)
setwd("~/Dev/R/regmods-007")
data(mtcars)
head(mtcars)
?mtcars
lm(mpg ~ am, data = mtcars)
summary(lm(mpg ~ am, data = mtcars))
summary(lm(mpg ~ am - 1, data = mtcars))
